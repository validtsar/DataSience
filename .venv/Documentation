### 1. Визначення проблеми

Прогнозування виживання на Титаніку засноване на різноманітних характеристиках, таких як вік, стать, клас пасажира тощо.

### 2. Збір даних

Набір даних про Титанік легко доступний на платформах, таких як Kaggle або використання наборів даних seaborn.
 Зазвичай він включає характеристики, такі як ID пасажира, Вижив (цільова змінна), Pclass, Ім'я, Стать, Вік,
 SibSp (брати, сестри/чоловіки, дружини на борту), Parch (батьки/діти на борту), Квиток, Тариф, Каюта та Місце посадки.

### 3. Очищення та підготовка даних

- Обробка відсутніх значень: наприклад, заповніть відсутні віки середнім віком або прогнозуйте вік за допомогою іншої
моделі.
- Перетворення категорійних змінних на числові, наприклад, використання одноразового кодування для стовпців
Embarked та Sex.
- Видалення характеристик, які можуть не вносити вкладу в модель, як-от Квиток та Ім'я (окрім випадків вилучення
титулів з імен).

titanic = pd.read_csv('titanic.csv')
 Скидаємо дані, які не впливають на наші процеси та створюємо окремий Датафрейм з 'Age' для можливості заповнення даних,
 яких не вистачає.

 Створюєм з титульним значенням окремий стовчик, беручи дані із стовпця "Name".

Створюємо екземпляр SimpleImputer з стратегією заміни відсутніх значень середніми

Застосувуємо заповнення пропущених значень стратегією заміни відсутніх значень середніми

Конвертуємо результати в DataFrame

Об'єднюємо стовпчик 'Age' у загальний датафрейм

Кодування категоріальних змінних ('sex', 'Embarked') за допомогою One-Hot Encoding

Витягування категоріальної змінної з даних

Створення екземпляру OneHotEncoder

Виконання one-hot encoding

Створення DataFrame з закодованими даними

Об'єднання закодованих даних з вихідним DataFrame

### 4. Розвідувальний аналіз даних (EDA)

- Аналіз розподілу ключових характеристик та їх зв'язку з цільовою змінною, Вижив.
- Використання візуалізацій для кращого розуміння даних: гістограми, коробкові діаграми та точкові діаграми.
- Дослідження кореляцій між характеристиками.
Залежність від класу досить висока. Графіки показують, що виживших першого класу є на 30% орієнтовно більше ніж,
невиживших. Якщо оцінити розподіл по гендерному рівні, то у кожному класі серед виживших жінок більше 50%. Що говорить
про високу толерантність людей навіть у критичних ситуаціях. Тобто клас тут ролі не відіграє. Щодо віку, можна зробити
висновок, що вік виживших на 5-10% менший від невиживших.
Виконуємо теплову карту для визначення звязків між змінними. Теплова карта дала досить малі лінійні значення, окрім
залежності класу від вартості та наявності рідних та сетри і бретів, що у свою чергу і так розуміється. Але попередні
графіки показують все ж таки якусь залежність. Скоріш за все це буде не лінійна.

### 5. Інженерія ознак

- Створення нових ознак, які можуть допомогти покращити модель, наприклад:
    - FamilySize = SibSp + Parch + 1, шляхом додавання до суми двох стовпців одиниці (самого пасажира).
    - IsAlone, бінарний індикатор того, чи є пасажир на самоті. Порівнюємо з 1 датафрейму "FamilySize" і переводимо
    булеве значення у бінарне.
    - Title, вилучений з імені як індикатор соціального статусу. Вилучений раніше.


- Масштабування ознак, якщо використовуються моделі, чутливі до масштабування ознак, такі як SVM або KNN.

### 6. Вибір моделі

- Розділіть дані на навчальний і тестовий набори для оцінки продуктивності ваших моделей.
Для першої моделі вибираємо модель лінійної регресії, і на тренувальних даних визначаємо ступінь її ефективності за
допомогою середньоквадратичної помилки та коефіцієнту детермінації. Середньоквадратична помилка: 0.7760616438878217
(що вказує на відстань між прогнозованими і фактичними значеннями)
Коефіцієнт детермінації: 0.22783808933328342.вказує на те, яка частина варіації залежної змінної
(у нашому випадку це ймовірність виживання) може бути пояснена моделлю. У випадку 1, буде означати, що модель повністю
пояснює варіацію у вихідних даних. У нашому випадку R-squared дорівнює 0.2278, що може вказувати на те, що модель
не вдається відтворити усю варіацію вихідної змінної і є просторові ознаки, які не враховуються в моделі.
Після проведення кросвалідації для даної моделі, отримали такі дані  Оцінки крос-валідації згідно тренувальних даних:
[-2.41688624e+26  1.88179374e-01  2.19664332e-01  1.68949362e-01   1.76257947e-02]
Середнє значення кросвалідації згідно тренувальних даних: -4.833772483047255e+25- Великі від'ємні значення оцінок
крос-валідації можуть виникнути внаслідок перетренування моделі на тренувальних даних або через неспрощення моделі.
Перетренування можна відкинути одразу. Це може означати, що модель надмірно відповідає шуму в навчальних даних,
що призводить до поганої універсальності моделі на нових даних

Визначимо параметри для моделі Lasso.

Оцінки крос-валідації згідно тренувальних даних: [-0.0063883  -0.0109584  -0.01774651 -0.00266605 -0.01297727]
Середнє значення кросвалідації згідно тренувальних даних: -0.010147306122095223
Найкращий результат на тестових даних: 0.1453165702782362
Середньоквадратична помилка: 1.0052285888564738
Коефіцієнт детермінації: -0.0001772848091179391

Оцінки крос-валідації згідно тренувальних даних: [0.15770807 0.23979203 0.2635686  0.19831401 0.01794663]
Середнє значення кросвалідації згідно тренувальних даних: 0.17546586988457344
Найкращий результат на тестових даних: 0.1550231383302756
Найкращі параметри: {'max_depth': 30, 'min_samples_split': 10, 'n_estimators': 50}
Середньоквадратична помилка: 0.8373713584724733
Коефіцієнт детермінації: 0.16683645791783008

Визначимо параметри для моделі ElasticNet
Середньоквадратична помилка: 0.7957803542119043
Коефіцієнт детермінації: 0.20821846612468164
Fitting 5 folds for each of 12 candidates, totalling 60 fits
Найкращі параметри: {'alpha': 0.1, 'l1_ratio': 0.1}
Середньо-квадратична помилка на тестовому наборі: 0.7957803542119043
Оцінки крос-валідації згідно тренувальних даних: [-0.0063883  -0.0109584  -0.01774651 -0.00266605 -0.01297727]
Середнє значення кросвалідації згідно тренувальних даних: -0.010147306122095223
Найкращий результат на тестових даних: 0.20821846612468164

Визначимо параметри для моделі Ridge
Середньоквадратична помилка (Ridge): 0.7768597151679721
Fitting 5 folds for each of 3 candidates, totalling 15 fits
Найкращі параметри: {'alpha': 10}
Середньо-квадратична помилка на тестовому наборі: 0.782471860081442
Оцінки крос-валідації згідно тренувальних даних: [0.13477511 0.18873508 0.23204831 0.16902939 0.01737506]
Середнє значення кросвалідації згідно тренувальних даних: 0.1483925896773512
Найкращий результат на тестових даних: 0.2214600846698188
Коефіцієнт детермінації: 0.2214600846698188


Після проведеного машинного навчання отримали результати, які дозволяють агенту бачити стани пасажирів
та приймати рішення щодо їх виживання на основі навчення підсилювального навчання
Початковий стан:                     Наступний стан після дії 1: reward=0, done=False
PassengerId      -1.732505           PassengerId      -1.728611
Pclass            0.825209           Survived          1.270711
SibSp             0.431350           Pclass           -1.572211
Parch            -0.474326           SibSp             0.431350
Fare             -0.500240           Parch            -0.474326
Age              -0.592481           Fare              0.788947
Sex_female       -0.734071           Age               0.638789
Sex_male          0.737695           Sex_female        1.362266
Sex_nan          -0.047431           Sex_male         -1.355574
Embarked_C       -0.482043           Sex_nan          -0.047431
Embarked_Q       -0.307562           Embarked_C        2.074505
Embarked_S        0.619306           Embarked_Q       -0.307562
Embarked_nan     -0.047431           Embarked_S       -1.614710
Title_Capt       -0.033520           Embarked_nan     -0.047431
Title_Col        -0.047431           Title_Capt       -0.033520
Title_Countess   -0.033520           Title_Col        -0.047431
Title_Don        -0.033520           Title_Countess   -0.033520
Title_Dr         -0.088986           Title_Don        -0.033520
Title_Jonkheer   -0.033520           Title_Dr         -0.088986
Title_Lady       -0.033520           Title_Jonkheer   -0.033520
Title_Major      -0.047431           Title_Lady       -0.033520
Title_Master     -0.216803           Title_Major      -0.047431
Title_Miss       -0.504906           Title_Master     -0.216803
Title_Mlle       -0.047431           Title_Miss       -0.504906
Title_Mme        -0.033520           Title_Mlle       -0.047431
Title_Mr          0.850532           Title_Mme        -0.033520
Title_Mrs        -0.402081           Title_Mr         -1.175735
Title_Ms         -0.033520           Title_Mrs         2.487063
Title_Rev        -0.082339           Title_Ms         -0.033520
Title_Sir        -0.033520           Title_Rev        -0.082339
Title_nan        -0.047431           Title_Sir        -0.033520
FamilySize        0.057853           Title_nan        -0.047431
IsAlone          -1.225891           FamilySize        0.057853
Name: 0, dtype: float64              IsAlone          -1.225891
                                     Name: 1, dtype: float64


- Навчити різні моделі, щоб побачити, яка працює найкраще. Почніть з простих моделей, таких як логістична регресія,
 і переходьте до більш складних, як-от випадкові ліси, підсилювальне градієнтне навчання або навіть нейронні мережі.
 За допомогою нейромережі було проаналізовано 100 епох і бачимо, що втрати зменшуються з кожною епохою тренування.
 Функція втрат оцінює, наскільки далеко прогнози моделі відрізняються від фактичних значень. У нашому
  випадку втрата від'ємна, що може бути ознакою неправильного визначення функції втрати або недостатньої кількості
  нейронів у вихідному шарі для моделі.
Epoch 1/100
72/72 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.0000e+00 - loss: 0.6328
Epoch 100/100
72/72 ━━━━━━━━━━━━━━━━━━━━ 0s 2ms/step - accuracy: 0.0000e+00 - loss: -3718.4790


- Використовуйте перехресну перевірку для оцінки ефективності кожної моделі.

### 7. Оцінка моделі

Вибрані моделі не оцінюються за допомогою

- Оцініть моделі на основі точності, прецизійності, відгуку, F1-балу та інших відповідних метрик.
- Використовуйте матриці помилок для розуміння продуктивності вашої моделі у класифікації виживших та невиживших.

### 8. Тонка настройка та валідація
Оскільки ми шукаємо модель з найменшою середньоквадратичною помилкою на тестових даних, то модель Lasso в цьому випадку
 є кращою. Таким чином, модель Lasso буде вважатися кращою моделлю для цієї задачі порівняно з нейромережею та іншими
  моделями.

- Використовуйте пошук по сітці або випадковий пошук для тонкої настройки параметрів вашої моделі.
- Підтвердіть вашу остаточну модель на тестовому наборі, щоб оцінити, наскільки добре вона буде працювати на
невідомих даних.

Оскільки ми шукаємо модель з найменшою середньоквадратичною помилкою на тестових даних, то модель Lasso в цьому випадку
 є кращою. Таким чином, модель Lasso буде вважатися кращою моделлю для цієї задачі порівняно з нейромережею та іншими
  моделями.

### 9. Розгортання (Необов'язково)

Для навчальних цілей ви можливо не розгортатимете свою модель, але в реальній ситуації ви тепер зробили б свою
модель доступною для прогнозування виживання пасажирів на основі їхніх характеристик.

### 10. Документація та презентація

Нарешті, задокументуйте свої висновки, кроки, які ви зробили, моделі, які ви тестували, і як ви інтерпретували
результати. Добре задокументований проект є незамінним як для навчання, так і для поділу вашої роботи з іншими.